// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.dvorfs.com/support",
            "email": "support@dvorfs.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login a user with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logout a user",
                "tags": [
                    "auth"
                ],
                "summary": "Logout a user",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "description": "Get the current authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dvorfs-repository-manager_internal_user.User"
                        }
                    }
                }
            }
        },
        "/blob-stores": {
            "get": {
                "description": "Get all BlobStores.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BlobStore"
                ],
                "summary": "Get all BlobStores",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_repository.BlobStore"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new BlobStore.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BlobStore"
                ],
                "summary": "Create a new BlobStore",
                "parameters": [
                    {
                        "description": "BlobStore object",
                        "name": "blobStore",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_repository.BlobStore"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/internal_repository.BlobStore"
                        }
                    }
                }
            }
        },
        "/blob-stores/{id}": {
            "get": {
                "description": "Get a BlobStore by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BlobStore"
                ],
                "summary": "Get a BlobStore by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BlobStore ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_repository.BlobStore"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a BlobStore.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "BlobStore"
                ],
                "summary": "Update a BlobStore",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BlobStore ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "BlobStore object",
                        "name": "blobStore",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_repository.BlobStore"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_repository.BlobStore"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a BlobStore.",
                "tags": [
                    "BlobStore"
                ],
                "summary": "Delete a BlobStore",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BlobStore ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/cleanup-policies": {
            "get": {
                "description": "Get a list of all cleanup policies",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cleanup"
                ],
                "summary": "Get all cleanup policies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dvorfs-repository-manager_internal_repository.CleanupPolicy"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cleanup policy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cleanup"
                ],
                "summary": "Create a new cleanup policy",
                "parameters": [
                    {
                        "description": "Cleanup Policy",
                        "name": "policy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dvorfs-repository-manager_internal_repository.CleanupPolicy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/cleanup-policies/{policyId}": {
            "put": {
                "description": "Update a cleanup policy by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cleanup"
                ],
                "summary": "Update a cleanup policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Policy ID",
                        "name": "policyId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Cleanup Policy",
                        "name": "policy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dvorfs-repository-manager_internal_repository.CleanupPolicy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete a cleanup policy by ID",
                "tags": [
                    "cleanup"
                ],
                "summary": "Delete a cleanup policy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Policy ID",
                        "name": "policyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/repositories": {
            "get": {
                "description": "Get a list of all repositories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repositories"
                ],
                "summary": "Get all repositories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_repository.Repository"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new repository",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repositories"
                ],
                "summary": "Create a new repository",
                "parameters": [
                    {
                        "description": "Repository",
                        "name": "repository",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_repository.Repository"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/repositories/{name}": {
            "get": {
                "description": "Get a repository by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repositories"
                ],
                "summary": "Get a repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_repository.Repository"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a repository by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "repositories"
                ],
                "summary": "Update a repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Repository",
                        "name": "repository",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_repository.Repository"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete a repository by name",
                "tags": [
                    "repositories"
                ],
                "summary": "Delete a repository",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/repository/{repository-name}/{path}": {
            "get": {
                "description": "Upload or download an artifact",
                "tags": [
                    "artifacts"
                ],
                "summary": "Handle artifact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository name",
                        "name": "repository-name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Artifact path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "Upload or download an artifact",
                "tags": [
                    "artifacts"
                ],
                "summary": "Handle artifact",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Repository name",
                        "name": "repository-name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Artifact path",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/search/artifacts": {
            "get": {
                "description": "Search for artifacts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search artifacts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_repository.Artifact"
                            }
                        }
                    }
                }
            }
        },
        "/security/roles": {
            "get": {
                "description": "Get a list of all roles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "security"
                ],
                "summary": "Get all roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_user.Role"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "security"
                ],
                "summary": "Create a new role",
                "parameters": [
                    {
                        "description": "Role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_user.Role"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/security/roles/{roleId}": {
            "put": {
                "description": "Update a role by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "security"
                ],
                "summary": "Update a role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "roleId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_user.Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete a role by ID",
                "tags": [
                    "security"
                ],
                "summary": "Delete a role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "roleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/security/users": {
            "get": {
                "description": "Get a list of all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "security"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal_user.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "security"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_user.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/security/users/{username}": {
            "put": {
                "description": "Update a user by username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "security"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_user.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete a user by username",
                "tags": [
                    "security"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/security/users/{username}/password": {
            "put": {
                "description": "Change a user's password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "security"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "dvorfs-repository-manager_internal_repository.CleanupPolicy": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "criteria": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "dvorfs-repository-manager_internal_user.Role": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dvorfs-repository-manager_internal_user.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dvorfs-repository-manager_internal_user.Role"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_auth.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "internal_repository.Artifact": {
            "type": "object",
            "properties": {
                "checksums": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "contentType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastDownloadedAt": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "repositoryID": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "internal_repository.BlobStore": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "repositories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_repository.Repository"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "internal_repository.CleanupPolicy": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "criteria": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "internal_repository.Repository": {
            "type": "object",
            "properties": {
                "artifacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_repository.Artifact"
                    }
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "blobStore": {
                    "$ref": "#/definitions/internal_repository.BlobStore"
                },
                "blobStoreID": {
                    "type": "string"
                },
                "cleanupPolicy": {
                    "$ref": "#/definitions/internal_repository.CleanupPolicy"
                },
                "cleanupPolicyID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "internal_user.Role": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "privileges": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "internal_user.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_user.Role"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Dvorfs Repository Manager API",
	Description:      "This is the API for the Dvorfs Repository Manager.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
